{"version":3,"sources":["components/groupSelection/GroupInput.js","components/groupSelection/GroupSwitch.js","components/groupSelection/GroupSelection.js","screens/Home.js","screens/Finish.js","components/lecturesSelection/LecturesList.js","screens/LecturesSelection.js","components/navigation/Header.js","components/navigation/Footer.js","App.js","serviceWorker.js","index.js","resources/calendar.png"],"names":["suggestions","groups","GroupInput","props","classes","useStyles","axios","get","then","response","key","data","push","label","catch","error","console","log","react_default","a","createElement","className","root","downshift_esm","id","_ref","object","value","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","inputValue","isOpen","selectedItem","setGroupId","Object","keys","find","_getInputProps","placeholder","onBlur","onFocus","inputProps","objectWithoutProperties","container","InputProps","ref","other","TextField","assign","objectSpread","inputRef","inputRoot","input","inputInput","renderInput","fullWidth","InputLabelProps","shrink","Paper","paper","square","_ref2$showEmpty","arguments","length","undefined","showEmpty","deburr","trim","toLowerCase","inputLength","count","filter","suggestion","keep","slice","getSuggestions","map","index","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","MenuItem","selected","component","style","fontWeight","renderSuggestion","item","makeStyles","theme","flexGrow","height","maxWidth","marginRight","position","zIndex","marginTop","spacing","left","right","chip","margin","flexWrap","width","GroupSwitch","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSwitchChange","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setState","checked","state","setWillModify","stop","FormControl","FormLabel","FormGroup","FormControlLabel","control","Switch","onChange","React","Component","GroupSelection","setGroup","groupId","groupName","selectedGroup","updateParentData","willModify","handleGroup","identifier","styles","GroupSwitch_GroupSwitch","display","gridTemplateColumns","gridColumnGap","justifyContent","justifySelf","Home","handleGroupChange","group","found","selectedGroups","forEach","element","setSelectedGroups","addOneMoreGroupSection","groupSelectionSections","concat","toConsumableArray","GroupSelection_GroupSelection","numberOfGroups","content","text","src","logo","alt","Fab","variant","size","color","aria-label","disabled","onClick","textAlign","paddingTop","image","verticalAlign","extendedIcon","Finish","handleClickOpen","open","handleClose","paperComponent","react_draggable_default","cancel","getGeneratedLink","lib","Button","href","Dialog","onClose","PaperComponent","aria-labelledby","DialogTitle","cursor","alignSelf","DialogContent","DialogContentText","DialogActions","paddingBottom","gridRowGap","padding","not","b","intersection","LecturesList","lectures","_React$useState","useState","_React$useState2","slicedToArray","setChecked","_React$useState3","_React$useState4","setLeft","_React$useState5","_React$useState6","setRight","_React$useState7","_React$useState8","setDisabled","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","numberOfChecked","items","handleToggleAll","customList","title","Card","CardHeader","cardHeader","avatar","Checkbox","indeterminate","subheader","Divider","List","list","dense","role","labelId","ListItem","button","ListItemIcon","tabIndex","disableRipple","ListItemText","primary","card","getGroup","Grid","justify","alignItems","direction","setIgnoredLectures","useMediaQuery","setDone","TransferList","lecture","name","stringRepresentationOfDays","dayOfTheWeek","convertLectureToReadableArray","ignoredLectures","mandatory","days","lectureNames","day","numericDay","includes","split","marginLeft","backgroundColor","palette","background","overflow","LecturesSelection","dataMounted","completed","numberOfCompletedModifications","simpleScheduleGroupsId","simpleSchedule","complexSchedule","setError","getGroupsThatWillBeModified","newList","groupIds","buildSchedule","apiError","schedule","prepareDataForFinishPage","post","setGeneratedLink","setStepTwoCompleted","setActiveStep","getActiveStep","renderLectures","groupsList","groupsThatWillBeModified","getSelectedGroups","_this2","_x","apply","Fragment","loadingContainer","center","react_loader_spinner_default","type","loader","top","transform","Line","Header","Stepper","activeStep","stepper","steps","Step","StepLabel","Header_Line","Footer","shouldButtonBeGrayed","groupList","shouldDisable","isStepTwoCompleted","Footer_Line","Typography","instructions","bind","backButton","bottom","marginBottom","App","generatedLink","apiIsRunning","dialogOpen","status","Header_Header","header","Home_Home","LecturesSelection_LecturesSelection","Finish_Finish","footer","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.bc5ed134.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport deburr from 'lodash/deburr';\r\nimport Downshift from 'downshift';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from \"axios\";\r\n\r\nlet suggestions = [];\r\n\r\nlet groups = {};\r\n\r\nexport default function GroupInput(props) {\r\n    const classes = useStyles();\r\n    suggestions = [];\r\n    axios.get('https://uek-calendar-generator.herokuapp.com/calendar/groups')\r\n        .then(response => {\r\n            groups = response.data;\r\n            for (var key in response.data) {\r\n                suggestions.push({label: response.data[key]})\r\n            }\r\n        }).catch(\r\n        function (error) {\r\n            console.log(error)\r\n        });\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Downshift id=\"downshift-simple\">\r\n                {({\r\n                      getInputProps,\r\n                      getItemProps,\r\n                      getLabelProps,\r\n                      getMenuProps,\r\n                      highlightedIndex,\r\n                      inputValue,\r\n                      isOpen,\r\n                      selectedItem,\r\n                  }) => {\r\n                    if (selectedItem === inputValue && isOpen === false) {\r\n                        props.setGroupId(getKeyByValue(groups, selectedItem), selectedItem);\r\n                    }\r\n                    const {onBlur, onFocus, ...inputProps} = getInputProps({\r\n                        placeholder: 'Search for your group',\r\n                    });\r\n\r\n                    return (\r\n                        <div className={classes.container}>\r\n                            {renderInput({\r\n                                fullWidth: true,\r\n                                classes,\r\n                                label: 'Group name',\r\n                                InputLabelProps: getLabelProps({shrink: true}),\r\n                                InputProps: {onBlur, onFocus},\r\n                                inputProps,\r\n                            })}\r\n\r\n                            <div {...getMenuProps()}>\r\n                                {isOpen ? (\r\n                                    <Paper className={classes.paper} square>\r\n                                        {getSuggestions(inputValue).map((suggestion, index) =>\r\n                                            renderSuggestion({\r\n                                                suggestion,\r\n                                                index,\r\n                                                itemProps: getItemProps({item: suggestion.label}),\r\n                                                highlightedIndex,\r\n                                                selectedItem,\r\n                                            }),\r\n                                        )}\r\n                                    </Paper>\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Downshift>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n}\r\n\r\n\r\nfunction renderInput(inputProps) {\r\n    const {InputProps, classes, ref, ...other} = inputProps;\r\n    return (\r\n        <TextField\r\n            InputProps={{\r\n                inputRef: ref,\r\n                classes: {\r\n                    root: classes.inputRoot,\r\n                    input: classes.inputInput,\r\n                },\r\n                ...InputProps,\r\n            }}\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nfunction renderSuggestion(suggestionProps) {\r\n    const {suggestion, index, itemProps, highlightedIndex, selectedItem} = suggestionProps;\r\n    const isHighlighted = highlightedIndex === index;\r\n    const isSelected = (selectedItem || '').indexOf(suggestion.label) > -1;\r\n    return (\r\n        <MenuItem\r\n            {...itemProps}\r\n            key={suggestion.label}\r\n            selected={isHighlighted}\r\n            component=\"div\"\r\n            style={{\r\n                fontWeight: isSelected ? 500 : 400,\r\n            }}\r\n        >\r\n            {suggestion.label}\r\n        </MenuItem>\r\n    );\r\n}\r\n\r\nrenderSuggestion.propTypes = {\r\n    highlightedIndex: PropTypes.number,\r\n    index: PropTypes.number,\r\n    itemProps: PropTypes.object,\r\n    selectedItem: PropTypes.string,\r\n    suggestion: PropTypes.shape({label: PropTypes.string}).isRequired,\r\n};\r\n\r\nfunction getSuggestions(value, {showEmpty = false} = {}) {\r\n    const inputValue = deburr(value.trim()).toLowerCase();\r\n    const inputLength = inputValue.length;\r\n    let count = 0;\r\n\r\n    return inputLength === 0 && !showEmpty\r\n        ? []\r\n        : suggestions.filter(suggestion => {\r\n            const keep =\r\n                count < 5 && suggestion.label.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n            if (keep) {\r\n                count += 1;\r\n            }\r\n            return keep;\r\n        });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        height: 80,\r\n        maxWidth: 500,\r\n        marginRight: 50\r\n    },\r\n    container: {\r\n        flexGrow: 1,\r\n        position: 'relative',\r\n    },\r\n    paper: {\r\n        position: 'absolute',\r\n        zIndex: 1,\r\n        marginTop: theme.spacing(1),\r\n        left: 0,\r\n        right: 0,\r\n    },\r\n    chip: {\r\n        margin: theme.spacing(0.5, 0.25),\r\n    },\r\n    inputRoot: {\r\n        flexWrap: 'wrap',\r\n    },\r\n    inputInput: {\r\n        width: 'auto',\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n","import React from 'react';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default class GroupSwitch extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            checked: false\r\n        };\r\n    }\r\n\r\n    handleSwitchChange = async () => {\r\n        await this.setState({checked: !this.state.checked});\r\n        this.props.setWillModify(this.state.checked)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <FormControl component=\"fieldset\">\r\n                <FormLabel component=\"legend\">Will you modify schedule?</FormLabel>\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={<Switch checked={this.state.checked} onChange={this.handleSwitchChange}\r\n                                         value=\"gilad\"/>}\r\n                        label={this.state.checked ? \"Yes, please\" : \"No, thanks\"}\r\n                    />\r\n                </FormGroup>\r\n            </FormControl>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport GroupInput from \"./GroupInput\";\r\nimport GroupSwitch from \"./GroupSwitch\";\r\n\r\nexport default class GroupSelection extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedGroup: \"\",\r\n            setGroupId: \"\",\r\n            willModify: false\r\n        };\r\n    }\r\n\r\n    setGroup = (groupId, groupName) => {\r\n        this.state.selectedGroup = groupId;\r\n        this.state.groupName = groupName;\r\n        this.updateParentData();\r\n    };\r\n\r\n    setWillModify = (value) => {\r\n        this.state.willModify = value;\r\n        this.updateParentData();\r\n    };\r\n\r\n    updateParentData = () => {\r\n        this.props.handleGroup({\r\n            identifier: this.props.identifier,\r\n            selectedGroup: this.state.selectedGroup,\r\n            groupName: this.state.groupName,\r\n            willModify: this.state.willModify\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.root}>\r\n                <div style={styles.input}>\r\n                    <GroupInput setGroupId={this.setGroup}/>\r\n                </div>\r\n                <div>\r\n                    <GroupSwitch setWillModify={this.setWillModify}/>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'grid',\r\n        gridTemplateColumns: \"1fr 1fr\",\r\n        gridColumnGap: \"10px\",\r\n        marginTop: 30,\r\n        justifyContent: \"center\"\r\n    },\r\n    input: {\r\n        justifySelf: 'end',\r\n    }\r\n};","import React from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport logo from '../resources/calendar.png';\r\nimport GroupSelection from \"../components/groupSelection/GroupSelection\";\r\nimport \"../styles/Text.scss\";\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numberOfGroups: 1,\r\n            groupSelectionSections: [<GroupSelection handleGroup={this.handleGroupChange} identifier={0}/>],\r\n            selectedGroups: [\r\n                {\r\n                    identifier: \"\",\r\n                    selectedGroup: \"\",\r\n                    groupName: \"\",\r\n                    willModify: false\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    handleGroupChange = (group) => {\r\n        let found = false;\r\n        this.state.selectedGroups.forEach(element => {\r\n            if (element.identifier === \"\" || element.identifier === group.identifier) {\r\n                found = true;\r\n                element.identifier = group.identifier;\r\n                element.selectedGroup = group.selectedGroup;\r\n                element.groupName = group.groupName;\r\n                element.willModify = group.willModify;\r\n            }\r\n        });\r\n        if (!found) {\r\n            console.log(\"Group not found on the list, add new one.\");\r\n            this.state.selectedGroups.push(group)\r\n        }\r\n        this.props.setSelectedGroups(this.state.selectedGroups);\r\n    };\r\n\r\n    addOneMoreGroupSection = () => {\r\n        this.setState({\r\n            groupSelectionSections: [...this.state.groupSelectionSections,\r\n                <GroupSelection handleGroup={this.handleGroupChange} identifier={this.state.numberOfGroups}/>]\r\n        });\r\n        this.setState({numberOfGroups: ++this.state.numberOfGroups});\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.content}>\r\n                <div style={styles.text}>\r\n                    <h1>UEK Calendar Generator <img src={logo} alt=\"Logo\" style={styles.logo}/></h1>\r\n                    <h2>Do you want to connect your university schedule <br/>\r\n                        with powerfull planning tool as google calendar ? <br/><br/>\r\n                        Just simply search for your group. </h2>\r\n                </div>\r\n                <div style={styles.content}>\r\n                    {this.state.groupSelectionSections}\r\n                </div>\r\n                <div className={\"button\"}>\r\n                    <div>\r\n                        <Fab\r\n                            variant=\"extended\"\r\n                            size=\"medium\"\r\n                            color=\"primary\"\r\n                            aria-label=\"Add\"\r\n                            disabled={this.state.numberOfGroups === 3}\r\n                            onClick={this.addOneMoreGroupSection}\r\n                        >\r\n                            Add one more group\r\n                        </Fab>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    content: {\r\n        paddingTop: \"10px\"\r\n    },\r\n    logo: {\r\n        width: \"100%\",\r\n        maxWidth: 120,\r\n        height: \"auto\"\r\n    },\r\n    image: {\r\n        justifyContent: 'center',\r\n        verticalAlign: 'center',\r\n        display: 'flex',\r\n    },\r\n    extendedIcon: {\r\n        marginRight: 10,\r\n    },\r\n};","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Draggable from 'react-draggable';\r\nimport logo from \"../resources/calendar.png\";\r\nimport \"../styles/Text.scss\";\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nexport default class Finish extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        };\r\n    }\r\n\r\n    handleClickOpen = () => {\r\n        this.setState({open: true})\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    };\r\n\r\n    paperComponent = (props) => {\r\n        return (\r\n            <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                <Paper {...props} />\r\n            </Draggable>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Paper style={styles.paper}>\r\n                <div style={styles.text}>\r\n                    <h1>UEK Calendar Generator <img src={logo} alt=\"Logo\" style={styles.logo}/></h1>\r\n                </div>\r\n                <div style={styles.content}>\r\n                    <h2>Here is your generated calendar URL. <br/> Copy and paste it into your google calendar.</h2>\r\n                    <TextField\r\n                        id=\"outlined\"\r\n                        style={{margin: 8}}\r\n                        value={this.props.getGeneratedLink}\r\n                        variant=\"outlined\"\r\n                    />\r\n                    <CopyToClipboard text={this.props.getGeneratedLink}>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClickOpen}>\r\n                            copy to clipboard\r\n                        </Button>\r\n                    </CopyToClipboard>\r\n\r\n                    <Button variant=\"outlined\" color=\"primary\"\r\n                            href={'https://calendar.google.com/calendar/r/settings/addbyurl'}>\r\n                        open google calendar\r\n                    </Button>\r\n                </div>\r\n                <Dialog\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    PaperComponent={this.paperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                >\r\n                    <DialogTitle style={{cursor: 'move', alignSelf: \"center\"}} id=\"draggable-dialog-title\">\r\n                        Data successfully copied\r\n                    </DialogTitle>\r\n                    <DialogContent style={{textAlign: \"center\"}}>\r\n                        <DialogContentText>\r\n                            Now you are ready to paste copied URL into your google calendar.\r\n                            <br/><br/>Click \"Open google calendar\" button below to be redirected directly into the\r\n                            settings.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            OK\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    paper: {\r\n        textAlign: \"-webkit-center\",\r\n        marginRight: \"10px\",\r\n        paddingBottom: \"30px\"\r\n    },\r\n    logo: {\r\n        width: \"100%\",\r\n        maxWidth: 120,\r\n        height: \"auto\"\r\n    },\r\n    content: {\r\n        display: \"grid\",\r\n        gridRowGap: \"10px\",\r\n        maxWidth: \"800px\",\r\n        padding: \"40px\",\r\n        height: \"40%\"\r\n    }\r\n};","import React from 'react';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport List from '@material-ui/core/List';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport \"../../styles/Table.scss\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nfunction not(a, b) {\r\n    return a.filter(value => b.indexOf(value) === -1);\r\n}\r\n\r\nfunction intersection(a, b) {\r\n    return a.filter(value => b.indexOf(value) !== -1);\r\n}\r\n\r\nfunction union(a, b) {\r\n    return [...a, ...not(b, a)];\r\n}\r\n\r\nexport default function LecturesList(props) {\r\n    return TransferList(convertLectureToReadableArray(props.getGroup), props)\r\n}\r\n\r\nconst stringRepresentationOfDays = [\"\", \" on Sundays\", \" on Mondays\", \" on Tuesdays\", \" on Wednesdays\", \" on Thursdays\", \" on Fridays\", \" on Saturdays\"];\r\n\r\nfunction convertLectureToReadableArray(group) {\r\n    let lectures = [];\r\n    group.lecture.forEach(element => {\r\n        lectures.push(element.name + stringRepresentationOfDays[element.dayOfTheWeek]);\r\n    });\r\n    return lectures\r\n}\r\n\r\nfunction setIgnoredLectures(props, ignoredLectures) {\r\n    resetMandatory(props.getGroup.lecture);\r\n    let days = [];\r\n    let lectureNames = [];\r\n    ignoredLectures.forEach(lecture => {\r\n        stringRepresentationOfDays.forEach((day, numericDay) => {\r\n            if (lecture.includes(day)) {\r\n                days.push(numericDay);\r\n                lectureNames.push(lecture.split(day)[0]);\r\n            }\r\n        })\r\n    });\r\n\r\n    lectureNames.forEach((name, index) => {\r\n        props.getGroup.lecture.forEach(lecture => {\r\n            if (lecture.name === name && lecture.dayOfTheWeek === days[index]) {\r\n                lecture.mandatory = false\r\n            }\r\n        })\r\n    })\r\n}\r\n\r\nfunction resetMandatory(lectures) {\r\n    lectures.forEach(lecture => {\r\n        lecture.mandatory = true\r\n    })\r\n}\r\n\r\nfunction TransferList(lectures, props) {\r\n    const styles = useStyles();\r\n    const [checked, setChecked] = React.useState([]);\r\n    const [left, setLeft] = React.useState(lectures);\r\n    const [right, setRight] = React.useState([]);\r\n    const [disabled, setDisabled] = React.useState(false);\r\n\r\n    const leftChecked = intersection(checked, left);\r\n    const rightChecked = intersection(checked, right);\r\n\r\n    const handleToggle = value => () => {\r\n        const currentIndex = checked.indexOf(value);\r\n        const newChecked = [...checked];\r\n\r\n        if (currentIndex === -1) {\r\n            newChecked.push(value);\r\n        } else {\r\n            newChecked.splice(currentIndex, 1);\r\n        }\r\n        setChecked(newChecked);\r\n    };\r\n\r\n    const numberOfChecked = items => intersection(checked, items).length;\r\n\r\n    const handleToggleAll = items => () => {\r\n        if (numberOfChecked(items) === items.length) {\r\n            setChecked(not(checked, items));\r\n        } else {\r\n            setChecked(union(checked, items));\r\n        }\r\n    };\r\n\r\n    const handleCheckedRight = () => {\r\n        setRight(right.concat(leftChecked));\r\n        setLeft(not(left, leftChecked));\r\n        setChecked(not(checked, leftChecked));\r\n        setIgnoredLectures(props, right.concat(leftChecked))\r\n    };\r\n\r\n    const handleCheckedLeft = () => {\r\n\r\n        setLeft(left.concat(rightChecked));\r\n        setRight(not(right, rightChecked));\r\n        setChecked(not(checked, rightChecked));\r\n        setIgnoredLectures(props, not(right, rightChecked))\r\n    };\r\n\r\n\r\n    const setDone = () => {\r\n        console.log(\"Disable modification and send data to parent\");\r\n        setDisabled(true);\r\n        props.setDone();\r\n    };\r\n\r\n\r\n    const customList = (title, items) => (\r\n        <Card>\r\n            <CardHeader\r\n                className={styles.cardHeader}\r\n                disabled={disabled}\r\n                avatar={\r\n                    <Checkbox\r\n                        onClick={handleToggleAll(items)}\r\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\r\n                        indeterminate={numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0}\r\n                        disabled={items.length === 0 || disabled}\r\n                        inputProps={{'aria-label': 'all lectures selected'}}\r\n                    />\r\n                }\r\n                title={title}\r\n                subheader={`${items.length} lectures`}\r\n            />\r\n            <Divider/>\r\n            <List className={styles.list} dense component=\"div\" role=\"list\">\r\n                {items.map(value => {\r\n                    const labelId = `transfer-list-all-item-${value}-label`;\r\n\r\n                    return (\r\n                        <ListItem key={value} role=\"listitem\" disabled={disabled} button onClick={handleToggle(value)}>\r\n                            <ListItemIcon>\r\n                                <Checkbox\r\n                                    checked={checked.indexOf(value) !== -1}\r\n                                    tabIndex={-1}\r\n                                    disableRipple\r\n                                    inputProps={{'aria-labelledby': labelId}}\r\n                                />\r\n                            </ListItemIcon>\r\n                            <ListItemText id={labelId} primary={`${value}`}/>\r\n                        </ListItem>\r\n                    );\r\n                })}\r\n                <ListItem/>\r\n            </List>\r\n        </Card>\r\n    );\r\n\r\n    return (\r\n        <div className={styles.card}>\r\n            <Card>\r\n                <CardHeader\r\n                    className={styles.cardHeader}\r\n                    title={<div className={styles.text}>\r\n                        <h2>{props.getGroup.groupName} </h2>\r\n                    </div>}\r\n                />\r\n                <Divider/>\r\n\r\n                <Grid\r\n                    container spacing={2}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    className={\"root\"}\r\n                >\r\n                    <div className={\"gridMediaQueries\"}>\r\n                        <Grid item>{customList('Generate calendar with', left)}</Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"column\" alignItems=\"center\">\r\n                                <div className={\"buttonsMediaQueries\"}>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        className={styles.button}\r\n                                        onClick={handleCheckedRight}\r\n                                        disabled={leftChecked.length === 0}\r\n                                        aria-label=\"move selected right\"\r\n                                    >\r\n                                        {useMediaQuery('(min-width:815px)') ? \"→\" : \"↓\"}\r\n                                    </Button>\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        className={styles.button}\r\n                                        onClick={handleCheckedLeft}\r\n                                        disabled={rightChecked.length === 0}\r\n                                        aria-label=\"move selected left\"\r\n                                    >\r\n                                        {useMediaQuery('(min-width:815px)') ? \"←\" : \"↑\"}\r\n                                    </Button>\r\n                                    <Button variant=\"contained\" color=\"primary\"\r\n                                            disabled={disabled}\r\n                                            onClick={setDone}>\r\n                                        Done\r\n                                    </Button>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>{customList('Ignore', right)}</Grid>\r\n                    </div>\r\n                </Grid>\r\n\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        //margin: 'auto',\r\n    },\r\n    card: {\r\n        paddingBottom: \"15px\",\r\n        width: \"fit-content\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n    text: {\r\n        textAlign: \"center\"\r\n    },\r\n    cardHeader: {\r\n        padding: \"8px\",\r\n    },\r\n    list: {\r\n        width: 350,\r\n        height: 235,\r\n        backgroundColor: theme.palette.background.paper,\r\n        overflow: 'auto',\r\n    },\r\n    button: {\r\n        margin: theme.spacing(0.5, 0),\r\n    },\r\n}));","import React from 'react';\r\nimport LecturesList from \"../components/lecturesSelection/LecturesList\";\r\nimport axios from \"axios\";\r\nimport Loader from 'react-loader-spinner'\r\nimport \"../styles/Text.scss\";\r\n\r\nexport default class LecturesSelection extends React.Component {\r\n\r\n    state = {\r\n        dataMounted: false,\r\n        error: false,\r\n        completed: false,\r\n        numberOfCompletedModifications: 0,\r\n        simpleScheduleGroupsId: [],\r\n        simpleSchedule: [],\r\n        complexSchedule: []\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const apiError = this.setError;\r\n        let groupsThatWillBeModified = this.getGroupsThatWillBeModified(this.props.getSelectedGroups);\r\n        groupsThatWillBeModified.forEach(async (group) => {\r\n                console.log(\"Fetching data for group: \" + group.selectedGroup);\r\n                await axios.get('https://uek-calendar-generator.herokuapp.com/calendar/distinct/' + group.selectedGroup)\r\n                    .then(response => {\r\n                        this.state.simpleSchedule.push({\r\n                            groupId: response.data.groupId,\r\n                            groupName: group.groupName,\r\n                            lecture: response.data.lecture\r\n                        });\r\n                        if (this.state.simpleSchedule.length === groupsThatWillBeModified.length) {\r\n                            console.log(\"Finished fetching data\");\r\n                            this.setState({dataMounted: true});\r\n                        }\r\n                    }).catch(\r\n                        function (error) {\r\n                            apiError()\r\n                        }\r\n                    )\r\n                ;\r\n            }\r\n        );\r\n    }\r\n\r\n    setError = () => {\r\n        this.setState({dataMounted: false});\r\n        this.setState({error: true});\r\n    };\r\n\r\n    getGroupsThatWillBeModified = (groups) => {\r\n        let newList = [];\r\n        let groupIds = [];\r\n        groups.forEach(group => {\r\n            if (!groupIds.includes(group.selectedGroup) && group.willModify === true) {\r\n                console.log(\"Found group \" + group.selectedGroup + \" that will be modified\");\r\n                newList.push(group);\r\n                groupIds.push(group.selectedGroup);\r\n            } else if (!groupIds.includes(group.selectedGroup) && group.willModify === false) {\r\n                console.log(\"Found group that will not be modified: \" + group.selectedGroup + \", full schedule will be generated\");\r\n                this.state.simpleScheduleGroupsId.push(group.selectedGroup)\r\n            }\r\n        });\r\n        if (this.state.simpleScheduleGroupsId.length === groups.length) {\r\n            console.log(\"List contains only groups with full schedule thad don't need modification. Build schedule\");\r\n            this.buildSchedule()\r\n        }\r\n        return newList;\r\n    };\r\n\r\n    buildSchedule = () => {\r\n        const apiError = this.setError;\r\n        let complexSchedule = {\r\n            groups: []\r\n        };\r\n        console.log(\"Check if there are schedules that were modified\");\r\n        if (this.state.simpleSchedule.length !== 0) {\r\n            this.state.simpleSchedule.forEach(schedule => {\r\n                complexSchedule.groups.push({\r\n                    groupId: schedule.groupId,\r\n                    lecture: schedule.lecture\r\n                });\r\n            })\r\n        }\r\n\r\n        console.log(\"Check if there are schedules that will not be modified\");\r\n        if (this.state.simpleScheduleGroupsId.length === 0) {\r\n            this.prepareDataForFinishPage(complexSchedule)\r\n        } else {\r\n            this.state.simpleScheduleGroupsId.forEach((id) => {\r\n                axios.get('https://uek-calendar-generator.herokuapp.com/calendar/distinct/' + id)\r\n                    .then(response => {\r\n                        complexSchedule.groups.push({\r\n                            groupId: response.data.groupId,\r\n                            lecture: response.data.lecture\r\n                        });\r\n                        console.log(\"Finished fetching, proceed to prepareDataForFinishPage\");\r\n                        this.prepareDataForFinishPage(complexSchedule)\r\n                    }).catch(\r\n                    function (error) {\r\n                        apiError()\r\n                    }\r\n                );\r\n            })\r\n        }\r\n    };\r\n\r\n    prepareDataForFinishPage = (complexSchedule) => {\r\n        let baseURL = \"https://uek-calendar-generator.herokuapp.com/calendar/modified/\";\r\n        axios.post('https://uek-calendar-generator.herokuapp.com/calendar/complex', complexSchedule)\r\n            .then(response => {\r\n                this.props.setGeneratedLink(baseURL + response.data.id);\r\n            }).catch(\r\n            function (error) {\r\n                console.log(error)\r\n            }\r\n        );\r\n        this.setState({completed: true});\r\n        this.props.setStepTwoCompleted(true);\r\n        this.props.setActiveStep(this.props.getActiveStep + 1)\r\n    };\r\n\r\n    setDone = () => {\r\n        ++this.state.numberOfCompletedModifications;\r\n        if (this.state.numberOfCompletedModifications === this.state.simpleSchedule.length) {\r\n            this.buildSchedule()\r\n        }\r\n    };\r\n\r\n    renderLectures = () => {\r\n        let groupsList = [];\r\n        this.state.simpleSchedule.forEach((group) => {\r\n            groupsList.push(<LecturesList setDone={this.setDone} getGroup={group}/>);\r\n        });\r\n        return groupsList\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.state.dataMounted === true &&\r\n                this.renderLectures()\r\n                }\r\n\r\n                {this.state.dataMounted === false && this.state.error === false &&\r\n                <div style={styles.loadingContainer}>\r\n                    <div style={styles.center}>\r\n                        <div>\r\n                            <Loader type=\"CradleLoader\"\r\n                                    height={100}\r\n                                    width={100}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n                {this.state.error === true &&\r\n                <div style={styles.loadingContainer}>\r\n                    <div className={\"error\"}>\r\n                            <h1>There was an error while trying to get schedule</h1>\r\n                            <h2>Problem may occur when schedule is empty or choosen group is invalid.</h2>\r\n                        <div style={styles.loader}>\r\n                            <Loader type=\"CradleLoader\"\r\n                                    height={100}\r\n                                    width={100}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                }\r\n\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nconst styles = {\r\n    loadingContainer: {\r\n        height: \"60vh\",\r\n        position: \"relative\",\r\n        justifyContent: 'center',\r\n        verticalAlign: 'center',\r\n        display: 'flex',\r\n    },\r\n    loader: {\r\n        width: \"150px\",\r\n        marginTop: \"30px\",\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    },\r\n    center: {\r\n        margin: 0,\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\"\r\n    },\r\n    list: {\r\n        backgroundColor: \"gray\"\r\n    }\r\n};\r\n","import React from 'react';\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\n\r\nconst Line = () => (\r\n    <hr style={{color: '#f5f5f5'}}/>\r\n);\r\n\r\nexport default class Header extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Stepper\r\n                    activeStep={this.props.activeStep}\r\n                    style={styles.stepper}>\r\n                    {this.props.steps.map(label => (\r\n                        <Step key={label}>\r\n                            <StepLabel>{label}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                <Line/>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nconst styles = {};","import React from 'react';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Line = () => (\r\n    <hr style={{color: '#f5f5f5'}}/>\r\n);\r\n\r\nexport default class Footer extends React.Component {\r\n\r\n    shouldButtonBeGrayed = (groupList) => {\r\n        let shouldDisable = false;\r\n        if (this.props.getActiveStep === 0) {\r\n            groupList.forEach(element => {\r\n                if (element.selectedGroup === \"\") {\r\n                    shouldDisable = true;\r\n                }\r\n            });\r\n        }\r\n        if (this.props.getActiveStep === 1) {\r\n            shouldDisable = !this.props.isStepTwoCompleted\r\n        }\r\n\r\n        return shouldDisable\r\n    };\r\n\r\n    render() {\r\n        const activeStep = this.props.getActiveStep;\r\n        const steps = this.props.steps;\r\n\r\n        return (\r\n            <div style={styles.root}>\r\n                <Line/>\r\n                {activeStep === steps.length - 1 ? (\r\n                    <div>\r\n                        <Typography style={styles.instructions}>\r\n                            <Button onClick={this.props.setActiveStep.bind(this, 0)}>Reset</Button>\r\n                            All steps completed\r\n                        </Typography>\r\n\r\n                    </div>\r\n                ) : (\r\n                    <div>\r\n                        <div>\r\n                            <Button\r\n                                disabled={activeStep === 0}\r\n                                onClick={this.props.setActiveStep.bind(this, activeStep - 1)}\r\n                                style={styles.backButton}\r\n                            >\r\n                                Back\r\n                            </Button>\r\n                            <Button variant=\"contained\" color=\"primary\"\r\n                                    disabled={this.shouldButtonBeGrayed(this.props.getSelectedGroups)}\r\n                                    onClick={this.props.setActiveStep.bind(this, activeStep + 1)}>\r\n                                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        bottom: '0'\r\n    },\r\n    backButton: {\r\n        marginRight: 10,\r\n    },\r\n    instructions: {\r\n        marginTop: 10,\r\n        marginBottom: 10,\r\n    }\r\n};","import React from 'react';\r\nimport './App.css';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Home from './screens/Home'\r\nimport Finish from './screens/Finish'\r\nimport LecturesSelection from './screens/LecturesSelection'\r\nimport Header from './components/navigation/Header'\r\nimport Footer from './components/navigation/Footer'\r\nimport axios from \"axios\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport Draggable from \"react-draggable\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apiIsRunning: false,\r\n            dialogOpen: true,\r\n            activeStep: 0,\r\n            steps: ['Select group', 'Select lectures', 'Finish'],\r\n            selectedGroups: [\r\n                {\r\n                    identifier: \"\",\r\n                    selectedGroup: \"\",\r\n                    groupName: \"\",\r\n                    willModify: false\r\n                }\r\n            ],\r\n            isStepTwoCompleted: false,\r\n            generatedLink: \"\"\r\n        };\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"Waking up API\");\r\n        axios.get('https://cors-anywhere.herokuapp.com/https://uek-calendar-generator.herokuapp.com/wake')\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    console.log(\"Got API response! We are ready to go!\");\r\n                    this.setState({apiIsRunning: true});\r\n                }\r\n            }).catch(\r\n            function (error) {\r\n                console.log(error)\r\n            });\r\n    }\r\n\r\n    setActiveStep = (value) => {\r\n        this.setState({activeStep: value});\r\n        if (value === 0) {\r\n            this.setSelectedGroups([{\r\n                identifier: \"\",\r\n                selectedGroup: \"\",\r\n                groupName: \"\",\r\n                willModify: false\r\n            }]);\r\n        }\r\n    };\r\n\r\n    setSelectedGroups = async (value) => {\r\n        await this.setState({selectedGroups: value});\r\n    };\r\n\r\n    setStepTwoCompleted = (value) => {\r\n        this.setState({isStepTwoCompleted: value});\r\n    };\r\n\r\n    setGeneratedLink = (value) => {\r\n        console.log(\"URL generated: \" + value);\r\n        this.setState({generatedLink: value});\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({open: false})\r\n    };\r\n\r\n    paperComponent = (props) => {\r\n        return (\r\n            <Draggable cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n                <Paper {...props} />\r\n            </Draggable>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={styles.root}>\r\n\r\n                {this.state.apiIsRunning === false &&\r\n                <Dialog\r\n                    open={this.state.dialogOpen}\r\n                    onClose={this.handleClose}\r\n                    PaperComponent={this.paperComponent}\r\n                    aria-labelledby=\"draggable-dialog-title\"\r\n                >\r\n                    <DialogTitle style={{cursor: 'move', alignSelf: \"center\"}} id=\"draggable-dialog-title\">\r\n                        Schedule API is starting\r\n                    </DialogTitle>\r\n                    <DialogContent style={{textAlign: \"center\"}}>\r\n                        <DialogContentText>\r\n                            Please be patient, calendar API is deployed on free server so it needs to be waken up.\r\n                            <br/><br/>\r\n                            This window will disappear in a moment.\r\n                        </DialogContentText>\r\n                    </DialogContent>\r\n                </Dialog>\r\n                }\r\n                <div style={styles.card}>\r\n                    <Header style={styles.header} activeStep={this.state.activeStep} steps={this.state.steps}/>\r\n                    <div>\r\n                        {this.state.activeStep === 0 && <Home setSelectedGroups={this.setSelectedGroups}/>}\r\n                        {this.state.activeStep === 1 && <LecturesSelection getSelectedGroups={this.state.selectedGroups}\r\n                                                                           setStepTwoCompleted={this.setStepTwoCompleted}\r\n                                                                           setGeneratedLink={this.setGeneratedLink}\r\n                                                                           setActiveStep={this.setActiveStep}\r\n                                                                           getActiveStep={this.state.activeStep}/>}\r\n                        {this.state.activeStep === 2 && <Finish getGeneratedLink={this.state.generatedLink}/>}\r\n                    </div>\r\n                    <div style={styles.footer}>\r\n                        <Footer getActiveStep={this.state.activeStep} steps={this.state.steps}\r\n                                setActiveStep={this.setActiveStep} getSelectedGroups={this.state.selectedGroups}\r\n                                isStepTwoCompleted={this.state.isStepTwoCompleted}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        verticalAlign: 'center',\r\n        height: \"100vh\",\r\n    },\r\n    card: {\r\n        position: \"relative\",\r\n        marginLeft: \"10px\",\r\n        padding: 5,\r\n        width: \"1300px\",\r\n    },\r\n    header: {\r\n        width: \"100%\",\r\n    },\r\n    footer: {\r\n        marginTop: \"50px\"\r\n    }\r\n};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister();\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/calendar.c8cd52fb.png\";"],"sourceRoot":""}